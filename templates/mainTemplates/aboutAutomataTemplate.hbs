<div class="row">
   <h1 class="heading">What is an NFA?</h1>
   <br> Every DFA is an NFA. NFAs do not have to comply with the two main rules that define a DFA. See "What is a DFA?".</br>
</div>
<div class="row">
   <h1 class="heading">How do you construct an NFA?</h1>
   <iframe width="560" height="315" src="https://www.youtube.com/embed/RYNN-tb9WxI" frameborder="0" allowfullscreen></iframe>
</div>
<div class="row">
   <h1 class="heading">What is a DFA?</h1>
   <br> "A deterministic finite automaton (DFA) is a finite-state machine that accepts and rejects strings of symbols and only produces a unique computation (or run) of the automaton for each input string." [1] The two main rules of DFAs are that each of its transitions is uniquely determined by its source state and input symbol, and that reading an input symbol is required for each state transition.</br>
</div>
<div class="row">
   <h1 class="heading">How do you construct a DFA from an NFA?</h1>
   <iframe width="560" height="315" src="https://www.youtube.com/embed/taClnxU-nao" frameborder="0" allowfullscreen></iframe>
</div>
<div class="row">
	<br> Hopcroft, John E.; Motwani, Rajeev; Ullman, Jeffrey D. (2001). Introduction to Automata Theory, Languages, and Computation (2 ed.). </br>
</div>
